{"version":3,"sources":["components/Course.js","components/NewCourseForm.js","services/ApiService.js","services/CourseService.js","services/CategoryService.js","App.js","reportWebVitals.js","index.js"],"names":["Course","props","remove","bind","this","onRemove","course","id","className","category","onClick","src","image","name","Component","defaultProps","NewCourseForm","state","handleSubmit","handleChange","e","preventDefault","newCourse","onSubmit","setState","target","value","onChange","categories","map","type","api","ApiService","endpoint","fetch","then","response","json","data","method","body","JSON","stringify","CourseService","courseId","CategoryService","App","courses","startData","add","a","Promise","all","push","courseIndex","findIndex","splice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAEMA,E,kDAMJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,OAAS,EAAKA,OAAOC,KAAZ,gBAFG,E,0CAKnB,WACEC,KAAKH,MAAMI,SAASD,KAAKH,MAAMK,OAAOC,M,oBAGxC,WACQ,IACFD,EADcF,KAAVH,MACJK,OAEJ,OACE,qBAAIE,UAAU,SAAd,UACE,8BAAOF,EAAOG,WACd,wBAAQC,QAAUN,KAAKF,OAAvB,eACA,qBAAKS,IAAML,EAAOM,QAClB,8BAAON,EAAOO,c,GAxBDC,aAAfd,EACGe,aAAe,CACpBT,OAAQ,GACRD,SAAU,cA2BCL,Q,QC9BTgB,E,kDAMJ,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CACXJ,KAAM,GACNJ,SAAU,GACVG,MAAO,IAET,EAAKM,aAAe,EAAKA,aAAaf,KAAlB,gBACpB,EAAKgB,aAAe,EAAKA,aAAahB,KAAlB,gBARH,E,gDAWnB,SAAaiB,GACXA,EAAEC,iBACF,IAAMC,EAAYlB,KAAKa,MAEnBK,EAAUT,MAAQS,EAAUV,OAASU,EAAUb,WACjDL,KAAKH,MAAMsB,SAASD,GAEpBlB,KAAKoB,SAAS,CACZX,KAAM,GACND,MAAO,Q,0BAKb,SAAaQ,GACL,IAAEK,EAAWL,EAAXK,OACJZ,EAAgBY,EAAhBZ,KAAMa,EAAUD,EAAVC,MAEVtB,KAAKoB,SAAL,eACGX,EAAOa,M,oBAIZ,WACE,IAAQzB,EAAiBG,KAAjBH,MAAOgB,EAAUb,KAAVa,MAEf,OACE,uBAAMT,UAAU,cAAce,SAAUnB,KAAKc,aAA7C,UACE,kCACE,yCACA,uBAAOL,KAAK,OAAOc,SAAUvB,KAAKe,aAAcO,MAAOT,EAAMJ,UAE/D,kCACE,0CACA,uBAAOA,KAAK,QAAQc,SAAUvB,KAAKe,aAAcO,MAAOT,EAAML,WAEhE,kCACE,6CACA,yBAAQC,KAAK,WAAWc,SAAUvB,KAAKe,aAAcO,MAAOT,EAAMR,SAAlE,UACE,wBAAQiB,MAAM,GAAd,oBAEEzB,EAAM2B,WAAWC,KAAI,SAAApB,GAAQ,OAAI,wBAAQiB,MAAOjB,EAASI,KAAxB,SAA+BJ,EAASI,gBAK/E,wBAAQiB,KAAK,SAAb,+B,GA/DoBhB,aAAtBE,EACGD,aAAe,CACpBa,WAAY,GACZL,SAAU,cAkECP,QCvETe,EAAM,0CAECC,EAAa,SACpBC,GACF,OAAOC,MAAM,GAAD,OAAIH,GAAJ,OAAUE,IACnBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAHpBL,EAAa,SAKnBC,EAAUK,GACb,OAAOJ,MAAM,GAAD,OAAIH,GAAJ,OAAUE,GAAY,CAChCM,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,KAEtBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAVlBL,EAAa,SAYjBC,EAAU1B,GACf,OAAO2B,MAAM,GAAD,OAAIH,GAAJ,OAAUE,EAAV,eAAyB1B,GAAM,CACzCgC,OAAQ,WAETJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WChBzBJ,EAAW,UAEJU,EAAgB,WAEzB,OAAOX,EAAeC,IAFbU,EAAgB,SAIpBrB,GACL,OAAOU,EAAgBC,EAAUX,IALxBqB,EAAgB,SAOpBC,GACL,OAAOZ,EAAkBC,EAAUW,ICR1BC,EAAkB,WAE3B,OAAOb,EAJM,aCiEFc,E,kDA1Db,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CACX8B,QAAS,GACTnB,WAAY,IAGd,EAAKoB,UAAY,EAAKA,UAAU7C,KAAf,gBACjB,EAAK8C,IAAM,EAAKA,IAAI9C,KAAT,gBACX,EAAKD,OAAS,EAAKA,OAAOC,KAAZ,gBAEd,EAAK6C,YAXY,E,oFAcnB,kCAAAE,EAAA,sEACsCC,QAAQC,IAAI,CAC9CT,IACAE,MAHJ,mCACSE,EADT,KACkBnB,EADlB,KAMExB,KAAKoB,SAAS,CACZuB,UACAnB,eARJ,gD,8GAYA,WAAUtB,GAAV,iBAAA4C,EAAA,6DACUH,EAAY3C,KAAKa,MAAjB8B,QADV,SAEsBJ,EAAqBrC,GAF3C,OAEIgB,EAFJ,OAGEyB,EAAQM,KAAK/B,GACblB,KAAKoB,SAAS,CAAEuB,YAJlB,gD,kHAOA,WAAaH,GAAb,iBAAAM,EAAA,6DACUH,EAAY3C,KAAKa,MAAjB8B,QACNO,EAAcP,EAAQQ,WAAU,SAAAjD,GAAM,OAAIA,EAAOC,KAAOqC,KAF5D,SAGQD,EAAqBC,GAH7B,OAIEG,EAAQS,OAAOF,EAAa,GAC5BlD,KAAKoB,SAAS,CAAEuB,YALlB,gD,2EAQA,WAAU,IAAD,OACC9B,EAAUb,KAAVa,MAER,OACE,sBAAKT,UAAU,MAAf,UACE,cAAC,EAAD,CAAee,SAAUnB,KAAK6C,IAAKrB,WAAYX,EAAMW,aAErD,oBAAIpB,UAAU,eAAd,SAEIS,EAAM8B,QAAQlB,KAAI,SAAAvB,GAAM,OAAI,cAAC,EAAD,CAAQA,OAASA,EAASD,SAAU,EAAKH,qB,GAnD/DY,aCIH2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.43385a64.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Course extends Component {\n  static defaultProps = {\n    course: {},\n    onRemove: () => {},\n  }\n  \n  constructor(props) {\n    super(props);\n    this.remove = this.remove.bind(this);\n  }\n  \n  remove() {\n    this.props.onRemove(this.props.course.id);\n  }\n  \n  render() {\n    const { props } = this,\n      { course } = props;\n    \n    return(\n      <li className=\"course\">\n        <div>{ course.category }</div>\n        <button onClick={ this.remove }>X</button>\n        <img src={ course.image } />\n        <div>{ course.name }</div>\n      </li>\n    );\n  }\n}\n\nexport default Course;","import React, { Component } from 'react';\n\nclass NewCourseForm extends Component {\n  static defaultProps = {\n    categories: [],\n    onSubmit: () => {}\n  }\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      category: '',\n      image: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  handleSubmit(e) {\n    e.preventDefault();\n    const newCourse = this.state;\n    \n    if (newCourse.name && newCourse.image && newCourse.category) {\n      this.props.onSubmit(newCourse);\n      \n      this.setState({\n        name: '',\n        image: ''\n      })\n    }\n  }\n  \n  handleChange(e) {\n    const { target } = e,\n      { name, value } = target;\n      \n    this.setState({\n      [name]: value\n    })\n  }\n  \n  render() {\n    const { props, state } = this;\n    \n    return(\n      <form className=\"course-form\" onSubmit={this.handleSubmit}>\n        <label>\n          <span>Name:</span>\n          <input name=\"name\" onChange={this.handleChange} value={state.name} />\n        </label>\n        <label>\n          <span>Image:</span>\n          <input name=\"image\" onChange={this.handleChange} value={state.image} />\n        </label>\n        <label>\n          <span>Category:</span>\n          <select name=\"category\" onChange={this.handleChange} value={state.category}>\n            <option value=\"\">Select</option>\n            {\n              props.categories.map(category => <option value={category.name}>{category.name}</option>)\n            }\n          </select>\n        </label>\n        \n        <button type=\"submit\">Add course</button>\n      </form>\n    );\n  }\n}\n\nexport default NewCourseForm;","const api = 'http://localhost:3002/api/react-cursos/';\n\nexport const ApiService = {\n  get(endpoint) {\n    return fetch(`${api}${endpoint}`)\n      .then(response => response.json());\n  },\n  post(endpoint, data) {\n    return fetch(`${api}${endpoint}`, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n    .then(response => response.json());\n  },\n  delete(endpoint, id) {\n    return fetch(`${api}${endpoint}?id=${id}`, {\n      method: 'DELETE'\n    })\n    .then(response => response.json());\n  }\n}","import { ApiService } from './ApiService';\n\nconst endpoint = 'courses';\n\nexport const CourseService = {\n  list() {\n    return ApiService.get(endpoint);\n  },\n  create(newCourse) {\n    return ApiService.post(endpoint, newCourse);\n  },\n  remove(courseId) {\n    return ApiService.delete(endpoint, courseId);\n  }\n}","import { ApiService } from './ApiService';\n\nconst endpoint = 'category';\n\nexport const CategoryService = {\n  list() {\n    return ApiService.get(endpoint);\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Course from './components/Course';\nimport NewCourseForm from './components/NewCourseForm';\n\nimport { CourseService } from './services/CourseService';\nimport { CategoryService } from './services/CategoryService';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: [],\n      categories: []\n    }\n    \n    this.startData = this.startData.bind(this);\n    this.add = this.add.bind(this);\n    this.remove = this.remove.bind(this);\n    \n    this.startData();\n  }\n  \n  async startData() {\n    const [courses, categories] = await Promise.all([\n      CourseService.list(),\n      CategoryService.list()\n    ]);\n    \n    this.setState({\n      courses,\n      categories\n    })\n  }\n  \n  async add(course) {\n    const { courses } = this.state,\n      newCourse = await CourseService.create(course);\n    courses.push(newCourse);\n    this.setState({ courses });\n  }\n  \n  async remove(courseId) {\n    const { courses } = this.state,\n      courseIndex = courses.findIndex(course => course.id === courseId);\n    await CourseService.remove(courseId);\n    courses.splice(courseIndex, 1);\n    this.setState({ courses });\n  }\n  \n  render() {\n    const { state } = this;\n    \n    return (\n      <div className=\"App\">\n        <NewCourseForm onSubmit={this.add} categories={state.categories} />\n      \n        <ul className=\"courses-list\">\n          {\n            state.courses.map(course => <Course course={ course } onRemove={this.remove} />)\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}